apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: blue-green-test
    namespace: ms-blue-green
  name: blue-green-test
  namespace: ms-blue-green
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: blue-green-test
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: blue-green-test
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: lifecycle
                operator: In
                values:
                - Ec2Spot
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: family
                operator: In
                values:
                - tcpaas
      tolerations:
      - effect: NoSchedule
        key: spot
        operator: Exists
      - effect: NoExecute
        key: spot
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 300
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 300
      containers:
      - env:
        - name: GREET
          value: tech_cross
        image: 289208114389.dkr.ecr.us-east-1.amazonaws.com/picpay-dev/ms-gatekeeper-new-kong:1.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: blue-green-test
        ports:
        - containerPort: 8000
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

